<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dang.springboot.mapper.AttendanceInfoMapper">
  <resultMap id="BaseResultMap" type="com.dang.springboot.pojo.AttendanceInfo">
    <id column="attendance_id" jdbcType="INTEGER" property="attendanceId" />
    <result column="student_id" jdbcType="INTEGER" property="studentId" />
    <result column="attendance_desc" jdbcType="VARCHAR" property="attendanceDesc" />
    <result column="attendance_state" jdbcType="VARCHAR" property="attendanceState" />
    <result column="attendance_time" jdbcType="TIMESTAMP" property="attendanceTime" />
    <result column="attendance_remark" jdbcType="VARCHAR" property="attendanceRemark" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    attendance_id, student_id, attendance_desc, attendance_state, attendance_time, attendance_remark
  </sql>
  <select id="selectByExample" parameterType="com.dang.springboot.pojo.AttendanceInfoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from attendance_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from attendance_info
    where attendance_id = #{attendanceId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from attendance_info
    where attendance_id = #{attendanceId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.dang.springboot.pojo.AttendanceInfoExample">
    delete from attendance_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.dang.springboot.pojo.AttendanceInfo">
    insert into attendance_info (attendance_id, student_id, attendance_desc, 
      attendance_state, attendance_time, attendance_remark
      )
    values (#{attendanceId,jdbcType=INTEGER}, #{studentId,jdbcType=INTEGER}, #{attendanceDesc,jdbcType=VARCHAR}, 
      #{attendanceState,jdbcType=VARCHAR}, #{attendanceTime,jdbcType=TIMESTAMP}, #{attendanceRemark,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.dang.springboot.pojo.AttendanceInfo">
    insert into attendance_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="attendanceId != null">
        attendance_id,
      </if>
      <if test="studentId != null">
        student_id,
      </if>
      <if test="attendanceDesc != null">
        attendance_desc,
      </if>
      <if test="attendanceState != null">
        attendance_state,
      </if>
      <if test="attendanceTime != null">
        attendance_time,
      </if>
      <if test="attendanceRemark != null">
        attendance_remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="attendanceId != null">
        #{attendanceId,jdbcType=INTEGER},
      </if>
      <if test="studentId != null">
        #{studentId,jdbcType=INTEGER},
      </if>
      <if test="attendanceDesc != null">
        #{attendanceDesc,jdbcType=VARCHAR},
      </if>
      <if test="attendanceState != null">
        #{attendanceState,jdbcType=VARCHAR},
      </if>
      <if test="attendanceTime != null">
        #{attendanceTime,jdbcType=TIMESTAMP},
      </if>
      <if test="attendanceRemark != null">
        #{attendanceRemark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.dang.springboot.pojo.AttendanceInfoExample" resultType="java.lang.Long">
    select count(*) from attendance_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update attendance_info
    <set>
      <if test="record.attendanceId != null">
        attendance_id = #{record.attendanceId,jdbcType=INTEGER},
      </if>
      <if test="record.studentId != null">
        student_id = #{record.studentId,jdbcType=INTEGER},
      </if>
      <if test="record.attendanceDesc != null">
        attendance_desc = #{record.attendanceDesc,jdbcType=VARCHAR},
      </if>
      <if test="record.attendanceState != null">
        attendance_state = #{record.attendanceState,jdbcType=VARCHAR},
      </if>
      <if test="record.attendanceTime != null">
        attendance_time = #{record.attendanceTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.attendanceRemark != null">
        attendance_remark = #{record.attendanceRemark,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update attendance_info
    set attendance_id = #{record.attendanceId,jdbcType=INTEGER},
      student_id = #{record.studentId,jdbcType=INTEGER},
      attendance_desc = #{record.attendanceDesc,jdbcType=VARCHAR},
      attendance_state = #{record.attendanceState,jdbcType=VARCHAR},
      attendance_time = #{record.attendanceTime,jdbcType=TIMESTAMP},
      attendance_remark = #{record.attendanceRemark,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.dang.springboot.pojo.AttendanceInfo">
    update attendance_info
    <set>
      <if test="studentId != null">
        student_id = #{studentId,jdbcType=INTEGER},
      </if>
      <if test="attendanceDesc != null">
        attendance_desc = #{attendanceDesc,jdbcType=VARCHAR},
      </if>
      <if test="attendanceState != null">
        attendance_state = #{attendanceState,jdbcType=VARCHAR},
      </if>
      <if test="attendanceTime != null">
        attendance_time = #{attendanceTime,jdbcType=TIMESTAMP},
      </if>
      <if test="attendanceRemark != null">
        attendance_remark = #{attendanceRemark,jdbcType=VARCHAR},
      </if>
    </set>
    where attendance_id = #{attendanceId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.dang.springboot.pojo.AttendanceInfo">
    update attendance_info
    set student_id = #{studentId,jdbcType=INTEGER},
      attendance_desc = #{attendanceDesc,jdbcType=VARCHAR},
      attendance_state = #{attendanceState,jdbcType=VARCHAR},
      attendance_time = #{attendanceTime,jdbcType=TIMESTAMP},
      attendance_remark = #{attendanceRemark,jdbcType=VARCHAR}
    where attendance_id = #{attendanceId,jdbcType=INTEGER}
  </update>
</mapper>