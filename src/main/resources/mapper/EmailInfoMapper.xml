<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dang.springboot.mapper.EmailInfoMapper">
  <resultMap id="BaseResultMap" type="com.dang.springboot.pojo.EmailInfo">
    <id column="email_id" jdbcType="INTEGER" property="emailId" />
    <result column="staff_id" jdbcType="INTEGER" property="staffId" />
    <result column="email_title" jdbcType="VARCHAR" property="emailTitle" />
    <result column="email_content" jdbcType="VARCHAR" property="emailContent" />
    <result column="email_time" jdbcType="TIMESTAMP" property="emailTime" />
    <result column="email_man" jdbcType="VARCHAR" property="emailMan" />
    <result column="email_addr" jdbcType="VARCHAR" property="emailAddr" />
    <result column="email_state" jdbcType="VARCHAR" property="emailState" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    email_id, staff_id, email_title, email_content, email_time, email_man, email_addr, 
    email_state
  </sql>
  <select id="selectByExample" parameterType="com.dang.springboot.pojo.EmailInfoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from email_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from email_info
    where email_id = #{emailId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from email_info
    where email_id = #{emailId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.dang.springboot.pojo.EmailInfoExample">
    delete from email_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.dang.springboot.pojo.EmailInfo">
    insert into email_info (email_id, staff_id, email_title, 
      email_content, email_time, email_man, 
      email_addr, email_state)
    values (#{emailId,jdbcType=INTEGER}, #{staffId,jdbcType=INTEGER}, #{emailTitle,jdbcType=VARCHAR}, 
      #{emailContent,jdbcType=VARCHAR}, #{emailTime,jdbcType=TIMESTAMP}, #{emailMan,jdbcType=VARCHAR}, 
      #{emailAddr,jdbcType=VARCHAR}, #{emailState,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.dang.springboot.pojo.EmailInfo">
    insert into email_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="emailId != null">
        email_id,
      </if>
      <if test="staffId != null">
        staff_id,
      </if>
      <if test="emailTitle != null">
        email_title,
      </if>
      <if test="emailContent != null">
        email_content,
      </if>
      <if test="emailTime != null">
        email_time,
      </if>
      <if test="emailMan != null">
        email_man,
      </if>
      <if test="emailAddr != null">
        email_addr,
      </if>
      <if test="emailState != null">
        email_state,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="emailId != null">
        #{emailId,jdbcType=INTEGER},
      </if>
      <if test="staffId != null">
        #{staffId,jdbcType=INTEGER},
      </if>
      <if test="emailTitle != null">
        #{emailTitle,jdbcType=VARCHAR},
      </if>
      <if test="emailContent != null">
        #{emailContent,jdbcType=VARCHAR},
      </if>
      <if test="emailTime != null">
        #{emailTime,jdbcType=TIMESTAMP},
      </if>
      <if test="emailMan != null">
        #{emailMan,jdbcType=VARCHAR},
      </if>
      <if test="emailAddr != null">
        #{emailAddr,jdbcType=VARCHAR},
      </if>
      <if test="emailState != null">
        #{emailState,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.dang.springboot.pojo.EmailInfoExample" resultType="java.lang.Long">
    select count(*) from email_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update email_info
    <set>
      <if test="record.emailId != null">
        email_id = #{record.emailId,jdbcType=INTEGER},
      </if>
      <if test="record.staffId != null">
        staff_id = #{record.staffId,jdbcType=INTEGER},
      </if>
      <if test="record.emailTitle != null">
        email_title = #{record.emailTitle,jdbcType=VARCHAR},
      </if>
      <if test="record.emailContent != null">
        email_content = #{record.emailContent,jdbcType=VARCHAR},
      </if>
      <if test="record.emailTime != null">
        email_time = #{record.emailTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.emailMan != null">
        email_man = #{record.emailMan,jdbcType=VARCHAR},
      </if>
      <if test="record.emailAddr != null">
        email_addr = #{record.emailAddr,jdbcType=VARCHAR},
      </if>
      <if test="record.emailState != null">
        email_state = #{record.emailState,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update email_info
    set email_id = #{record.emailId,jdbcType=INTEGER},
      staff_id = #{record.staffId,jdbcType=INTEGER},
      email_title = #{record.emailTitle,jdbcType=VARCHAR},
      email_content = #{record.emailContent,jdbcType=VARCHAR},
      email_time = #{record.emailTime,jdbcType=TIMESTAMP},
      email_man = #{record.emailMan,jdbcType=VARCHAR},
      email_addr = #{record.emailAddr,jdbcType=VARCHAR},
      email_state = #{record.emailState,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.dang.springboot.pojo.EmailInfo">
    update email_info
    <set>
      <if test="staffId != null">
        staff_id = #{staffId,jdbcType=INTEGER},
      </if>
      <if test="emailTitle != null">
        email_title = #{emailTitle,jdbcType=VARCHAR},
      </if>
      <if test="emailContent != null">
        email_content = #{emailContent,jdbcType=VARCHAR},
      </if>
      <if test="emailTime != null">
        email_time = #{emailTime,jdbcType=TIMESTAMP},
      </if>
      <if test="emailMan != null">
        email_man = #{emailMan,jdbcType=VARCHAR},
      </if>
      <if test="emailAddr != null">
        email_addr = #{emailAddr,jdbcType=VARCHAR},
      </if>
      <if test="emailState != null">
        email_state = #{emailState,jdbcType=VARCHAR},
      </if>
    </set>
    where email_id = #{emailId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.dang.springboot.pojo.EmailInfo">
    update email_info
    set staff_id = #{staffId,jdbcType=INTEGER},
      email_title = #{emailTitle,jdbcType=VARCHAR},
      email_content = #{emailContent,jdbcType=VARCHAR},
      email_time = #{emailTime,jdbcType=TIMESTAMP},
      email_man = #{emailMan,jdbcType=VARCHAR},
      email_addr = #{emailAddr,jdbcType=VARCHAR},
      email_state = #{emailState,jdbcType=VARCHAR}
    where email_id = #{emailId,jdbcType=INTEGER}
  </update>
</mapper>