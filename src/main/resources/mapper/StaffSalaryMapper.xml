<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dang.springboot.mapper.StaffSalaryMapper">
  <resultMap id="BaseResultMap" type="com.dang.springboot.pojo.StaffSalary">
    <id column="staff_salary_id" jdbcType="INTEGER" property="staffSalaryId" />
    <result column="staff_id" jdbcType="INTEGER" property="staffId" />
    <result column="sta_staff_id" jdbcType="INTEGER" property="staStaffId" />
    <result column="staff_salary_total" jdbcType="DOUBLE" property="staffSalaryTotal" />
    <result column="staff_salary_deduct" jdbcType="DOUBLE" property="staffSalaryDeduct" />
    <result column="staff_salary_real" jdbcType="DOUBLE" property="staffSalaryReal" />
    <result column="staff_salary_isused" jdbcType="VARCHAR" property="staffSalaryIsused" />
    <result column="staff_salary_time" jdbcType="TIMESTAMP" property="staffSalaryTime" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    staff_salary_id, staff_id, sta_staff_id, staff_salary_total, staff_salary_deduct, 
    staff_salary_real, staff_salary_isused, staff_salary_time, remark
  </sql>
  <select id="selectByExample" parameterType="com.dang.springboot.pojo.StaffSalaryExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from staff_salary
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from staff_salary
    where staff_salary_id = #{staffSalaryId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from staff_salary
    where staff_salary_id = #{staffSalaryId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.dang.springboot.pojo.StaffSalaryExample">
    delete from staff_salary
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.dang.springboot.pojo.StaffSalary">
    insert into staff_salary (staff_salary_id, staff_id, sta_staff_id, 
      staff_salary_total, staff_salary_deduct, staff_salary_real, 
      staff_salary_isused, staff_salary_time, remark
      )
    values (#{staffSalaryId,jdbcType=INTEGER}, #{staffId,jdbcType=INTEGER}, #{staStaffId,jdbcType=INTEGER}, 
      #{staffSalaryTotal,jdbcType=DOUBLE}, #{staffSalaryDeduct,jdbcType=DOUBLE}, #{staffSalaryReal,jdbcType=DOUBLE}, 
      #{staffSalaryIsused,jdbcType=VARCHAR}, #{staffSalaryTime,jdbcType=TIMESTAMP}, #{remark,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.dang.springboot.pojo.StaffSalary">
    insert into staff_salary
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="staffSalaryId != null">
        staff_salary_id,
      </if>
      <if test="staffId != null">
        staff_id,
      </if>
      <if test="staStaffId != null">
        sta_staff_id,
      </if>
      <if test="staffSalaryTotal != null">
        staff_salary_total,
      </if>
      <if test="staffSalaryDeduct != null">
        staff_salary_deduct,
      </if>
      <if test="staffSalaryReal != null">
        staff_salary_real,
      </if>
      <if test="staffSalaryIsused != null">
        staff_salary_isused,
      </if>
      <if test="staffSalaryTime != null">
        staff_salary_time,
      </if>
      <if test="remark != null">
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="staffSalaryId != null">
        #{staffSalaryId,jdbcType=INTEGER},
      </if>
      <if test="staffId != null">
        #{staffId,jdbcType=INTEGER},
      </if>
      <if test="staStaffId != null">
        #{staStaffId,jdbcType=INTEGER},
      </if>
      <if test="staffSalaryTotal != null">
        #{staffSalaryTotal,jdbcType=DOUBLE},
      </if>
      <if test="staffSalaryDeduct != null">
        #{staffSalaryDeduct,jdbcType=DOUBLE},
      </if>
      <if test="staffSalaryReal != null">
        #{staffSalaryReal,jdbcType=DOUBLE},
      </if>
      <if test="staffSalaryIsused != null">
        #{staffSalaryIsused,jdbcType=VARCHAR},
      </if>
      <if test="staffSalaryTime != null">
        #{staffSalaryTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.dang.springboot.pojo.StaffSalaryExample" resultType="java.lang.Long">
    select count(*) from staff_salary
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update staff_salary
    <set>
      <if test="record.staffSalaryId != null">
        staff_salary_id = #{record.staffSalaryId,jdbcType=INTEGER},
      </if>
      <if test="record.staffId != null">
        staff_id = #{record.staffId,jdbcType=INTEGER},
      </if>
      <if test="record.staStaffId != null">
        sta_staff_id = #{record.staStaffId,jdbcType=INTEGER},
      </if>
      <if test="record.staffSalaryTotal != null">
        staff_salary_total = #{record.staffSalaryTotal,jdbcType=DOUBLE},
      </if>
      <if test="record.staffSalaryDeduct != null">
        staff_salary_deduct = #{record.staffSalaryDeduct,jdbcType=DOUBLE},
      </if>
      <if test="record.staffSalaryReal != null">
        staff_salary_real = #{record.staffSalaryReal,jdbcType=DOUBLE},
      </if>
      <if test="record.staffSalaryIsused != null">
        staff_salary_isused = #{record.staffSalaryIsused,jdbcType=VARCHAR},
      </if>
      <if test="record.staffSalaryTime != null">
        staff_salary_time = #{record.staffSalaryTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update staff_salary
    set staff_salary_id = #{record.staffSalaryId,jdbcType=INTEGER},
      staff_id = #{record.staffId,jdbcType=INTEGER},
      sta_staff_id = #{record.staStaffId,jdbcType=INTEGER},
      staff_salary_total = #{record.staffSalaryTotal,jdbcType=DOUBLE},
      staff_salary_deduct = #{record.staffSalaryDeduct,jdbcType=DOUBLE},
      staff_salary_real = #{record.staffSalaryReal,jdbcType=DOUBLE},
      staff_salary_isused = #{record.staffSalaryIsused,jdbcType=VARCHAR},
      staff_salary_time = #{record.staffSalaryTime,jdbcType=TIMESTAMP},
      remark = #{record.remark,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.dang.springboot.pojo.StaffSalary">
    update staff_salary
    <set>
      <if test="staffId != null">
        staff_id = #{staffId,jdbcType=INTEGER},
      </if>
      <if test="staStaffId != null">
        sta_staff_id = #{staStaffId,jdbcType=INTEGER},
      </if>
      <if test="staffSalaryTotal != null">
        staff_salary_total = #{staffSalaryTotal,jdbcType=DOUBLE},
      </if>
      <if test="staffSalaryDeduct != null">
        staff_salary_deduct = #{staffSalaryDeduct,jdbcType=DOUBLE},
      </if>
      <if test="staffSalaryReal != null">
        staff_salary_real = #{staffSalaryReal,jdbcType=DOUBLE},
      </if>
      <if test="staffSalaryIsused != null">
        staff_salary_isused = #{staffSalaryIsused,jdbcType=VARCHAR},
      </if>
      <if test="staffSalaryTime != null">
        staff_salary_time = #{staffSalaryTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where staff_salary_id = #{staffSalaryId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.dang.springboot.pojo.StaffSalary">
    update staff_salary
    set staff_id = #{staffId,jdbcType=INTEGER},
      sta_staff_id = #{staStaffId,jdbcType=INTEGER},
      staff_salary_total = #{staffSalaryTotal,jdbcType=DOUBLE},
      staff_salary_deduct = #{staffSalaryDeduct,jdbcType=DOUBLE},
      staff_salary_real = #{staffSalaryReal,jdbcType=DOUBLE},
      staff_salary_isused = #{staffSalaryIsused,jdbcType=VARCHAR},
      staff_salary_time = #{staffSalaryTime,jdbcType=TIMESTAMP},
      remark = #{remark,jdbcType=VARCHAR}
    where staff_salary_id = #{staffSalaryId,jdbcType=INTEGER}
  </update>
</mapper>